# CI/CD PR Pipeline Configuration
# This file serves as a template for continuous integration and deployment pipeline
# Configure according to your CI/CD platform (GitHub Actions, GitLab CI, etc.)

name: CI/CD PR Pipeline

on: [pull_request]

jobs:
  code-quality:
    name: Code Quality
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: ['20']
        os: [ubuntu-latest, macOS-latest]
    
    env:
      NODE_ENV: test
      CI: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run ESLint
        run: npm run lint:check

      - name: Check code formatting
        run: npm run format:check

      - name: Run security audit (advisory)
        run: npm run security:audit || true
        continue-on-error: true

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    needs: code-quality
    strategy:
      matrix:
        node-version: ['20']
        os: [ubuntu-latest, macOS-latest]
    
    env:
      NODE_ENV: test
      CI: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Setup CLI
        uses: adobe/aio-cli-setup-action@1.3.0
        with:
          os: ${{ matrix.os }}
          version: 10.x.x

      - name: Auth
        uses: adobe/aio-apps-action@3.3.0
        with:
          os: ${{ matrix.os }}
          command: oauth_sts
          CLIENTID: ${{ secrets.CLIENTID_STAGE }}
          CLIENTSECRET: ${{ secrets.CLIENTSECRET_STAGE }}
          TECHNICALACCOUNTID: ${{ secrets.TECHNICALACCID_STAGE }}
          TECHNICALACCOUNTEMAIL: ${{ secrets.TECHNICALACCEMAIL_STAGE }}
          IMSORGID: ${{ secrets.IMSORGID_STAGE }}
          SCOPES: ${{ secrets.SCOPES_STAGE }}

      - name: Run tests with coverage
        uses: adobe/aio-apps-action@3.3.0
        with:
          os: ${{ matrix.os }}
          command: test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    needs: [code-quality, test]
    strategy:
      matrix:
        node-version: ['20']
        os: [ubuntu-latest, macOS-latest]
    
    env:
      NODE_ENV: production
      CI: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Setup CLI
        uses: adobe/aio-cli-setup-action@1.3.0
        with:
          os: ${{ matrix.os }}
          version: 10.x.x

      - name: Auth
        uses: adobe/aio-apps-action@3.3.0
        with:
          os: ${{ matrix.os }}
          command: oauth_sts
          CLIENTID: ${{ secrets.CLIENTID_STAGE }}
          CLIENTSECRET: ${{ secrets.CLIENTSECRET_STAGE }}
          TECHNICALACCOUNTID: ${{ secrets.TECHNICALACCID_STAGE }}
          TECHNICALACCOUNTEMAIL: ${{ secrets.TECHNICALACCEMAIL_STAGE }}
          IMSORGID: ${{ secrets.IMSORGID_STAGE }}
          SCOPES: ${{ secrets.SCOPES_STAGE }}

      - name: Build project
        env:
          AIO_RUNTIME_NAMESPACE: ${{ secrets.AIO_RUNTIME_NAMESPACE_STAGE }}
        uses: adobe/aio-apps-action@3.3.0
        with:
          os: ${{ matrix.os }}
          command: build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          name: build-artifacts
          path: dist/
